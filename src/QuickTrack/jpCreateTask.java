/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QuickTrack;

import java.awt.CardLayout;
import java.awt.Container;
import java.awt.LayoutManager;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.json.JSONArray;
//import net.sourceforge.jdatepicker.impl.JDatePanelImpl;
//import net.sourceforge.jdatepicker.impl.JDatePickerImpl;
//import net.sourceforge.jdatepicker.impl.UtilDateModel;
import org.json.JSONObject;

/**
 *
 * @author Aras
 */
public class jpCreateTask extends javax.swing.JPanel {

    /**
     * Creates new form jpCreateandEditTask
     */
    public jpCreateTask() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jDatePickerUtil1 = new net.sourceforge.jdatepicker.util.JDatePickerUtil();
        dateComponentFormatter1 = new net.sourceforge.jdatepicker.impl.DateComponentFormatter();
        jDateComponentFactory1 = new net.sourceforge.jdatepicker.JDateComponentFactory();
        jDatePickerUtil2 = new net.sourceforge.jdatepicker.util.JDatePickerUtil();
        utilDateModel1 = new net.sourceforge.jdatepicker.impl.UtilDateModel();
        utilCalendarModel1 = new net.sourceforge.jdatepicker.impl.UtilCalendarModel();
        sqlDateModel1 = new net.sourceforge.jdatepicker.impl.SqlDateModel();
        jlTaskName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jlTaskDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaTaskDescription = new javax.swing.JTextArea();
        jlTaskDueDate = new javax.swing.JLabel();
        jbCreateTask = new javax.swing.JButton();
        jcbNotify = new javax.swing.JCheckBox();
        jdfTaskDueDate = new org.jdesktop.swingx.JXDatePicker();
        btnGoBack = new javax.swing.JButton();
        jcbGroups = new javax.swing.JComboBox<>();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jlTaskName.setText("Name");

        jlTaskDescription.setText("Description");

        jtaTaskDescription.setColumns(20);
        jtaTaskDescription.setRows(5);
        jScrollPane1.setViewportView(jtaTaskDescription);

        jlTaskDueDate.setText("Due Date ");

        jbCreateTask.setText("Create Task");
        jbCreateTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCreateTaskActionPerformed(evt);
            }
        });

        jcbNotify.setText("Notify all group members?");
        jcbNotify.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbNotifyItemStateChanged(evt);
            }
        });
        jcbNotify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNotifyActionPerformed(evt);
            }
        });

        btnGoBack.setText("Go Back");
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });

        jcbGroups.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbGroups.setEnabled(false);
        jcbGroups.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbGroupsItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jbCreateTask, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGoBack))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlTaskName)
                    .addComponent(jlTaskDescription)
                    .addComponent(jlTaskDueDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jdfTaskDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(78, 78, 78))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jcbGroups, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jcbNotify, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlTaskName))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jlTaskDescription)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jdfTaskDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlTaskDueDate))
                .addGap(18, 18, 18)
                .addComponent(jcbNotify)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbGroups, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCreateTask)
                    .addComponent(btnGoBack))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public static void setjcbGroups()
    {
        jcbGroups.removeAllItems();
        jcbGroups.addItem("Select Group");
        
        try {
            
            JSONObject response = HTTPService.getGroups();
            
            JSONArray rows = response.getJSONArray("response");
            
            for(int i = 0; i < rows.length(); i++)
            {
                JSONObject element = rows.getJSONObject(i);
  
                jcbGroups.addItem(element.getString("name"));
            }
       
                        
        } catch (IOException ex) {
            Logger.getLogger(jpCreateTask.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    
    
    private void jbCreateTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCreateTaskActionPerformed
        try {

            // start by calling our server to add a task
            JSONObject response = HTTPService.addTask(txtName.getText(), jtaTaskDescription.getText(), jdfTaskDueDate.getDate(), jcbNotify.isSelected());
            System.out.println("response = " + response);
            // Display a message and returns us home on success
            if("error".equals(response.getString("status")))
            {
                JFrame PopUp = new JFrame();
                JOptionPane.showMessageDialog(PopUp,"There was a problem adding this task. Try again!");               
            }
            else
            {
                JFrame PopUp = new JFrame();
                JOptionPane.showMessageDialog(PopUp,"Task Added");
                
                // Switch the panel
                Container parent = this.getParent(); 
                LayoutManager layout = getParent().getLayout();
                if (layout instanceof CardLayout) {
                    CardLayout cardLayout = (CardLayout)layout;
                    cardLayout.show(parent, "jpOverview");
                }
                
            }
            
        } catch (IOException ex) {
            Logger.getLogger(jpCreateTask.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jbCreateTaskActionPerformed

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        // Switch the panel
        Container parent = this.getParent(); 
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cardLayout = (CardLayout)layout;
            cardLayout.show(parent, "jpOverview");
        }
    }//GEN-LAST:event_btnGoBackActionPerformed

    private void jcbNotifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNotifyActionPerformed
        
    }//GEN-LAST:event_jcbNotifyActionPerformed

    private void jcbGroupsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbGroupsItemStateChanged
        
    }//GEN-LAST:event_jcbGroupsItemStateChanged

    private void jcbNotifyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbNotifyItemStateChanged
        if(jcbNotify.isSelected())
        {
            jcbGroups.setEnabled(true);
        }
        else
        {
            jcbGroups.setEnabled(false);
        }
    }//GEN-LAST:event_jcbNotifyItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGoBack;
    private net.sourceforge.jdatepicker.impl.DateComponentFormatter dateComponentFormatter1;
    private net.sourceforge.jdatepicker.JDateComponentFactory jDateComponentFactory1;
    private net.sourceforge.jdatepicker.util.JDatePickerUtil jDatePickerUtil1;
    private net.sourceforge.jdatepicker.util.JDatePickerUtil jDatePickerUtil2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbCreateTask;
    private static javax.swing.JComboBox<String> jcbGroups;
    private javax.swing.JCheckBox jcbNotify;
    private org.jdesktop.swingx.JXDatePicker jdfTaskDueDate;
    private javax.swing.JLabel jlTaskDescription;
    private javax.swing.JLabel jlTaskDueDate;
    private javax.swing.JLabel jlTaskName;
    private javax.swing.JTextArea jtaTaskDescription;
    private net.sourceforge.jdatepicker.impl.SqlDateModel sqlDateModel1;
    private javax.swing.JTextField txtName;
    private net.sourceforge.jdatepicker.impl.UtilCalendarModel utilCalendarModel1;
    private net.sourceforge.jdatepicker.impl.UtilDateModel utilDateModel1;
    // End of variables declaration//GEN-END:variables
}
