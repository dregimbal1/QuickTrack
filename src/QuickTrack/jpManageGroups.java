/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QuickTrack;

import java.awt.CardLayout;
import java.awt.Container;
import java.awt.LayoutManager;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author David Regimbal, Aras Masalaitis, Jesse Wasko, Sumedh Savanur, Gauri
 * Khawadkar <bk.psu.edu>
 */
public class jpManageGroups extends javax.swing.JPanel {

    /**
     * Creates new form jpManageGroups
     */
    public jpManageGroups() {
        initComponents();
    }
    
    /**
     * setGroups.
     * This will call and populate the groups table with all groups the user is associated with.
     */
    public static void setGroups()
    {

        try {

            // start by calling our server for groups
            JSONObject response = HTTPService.getGroups();
            
            // Take the response from the call
            JSONArray rows = response.getJSONArray("response");
            
            // Declare our JTable model for later
            DefaultTableModel model = (DefaultTableModel) jtGroups.getModel();
            
            // Reset the JTable in case we are coming back a second time
            model.setColumnCount(0);
            model.setRowCount(0);

            // Declare our columns 
            model.addColumn("id");
            model.addColumn("name");
            model.addColumn("createdBy");
            model.addColumn("");

            // Iterate over our object and add rows
            for(int i = 0; i < rows.length(); i++)
            {
                JSONObject element = rows.getJSONObject(i);
                model.addRow(new Object[] { element.getString("id"), element.getString("name"), element.getString("createdBy"), "leave"  });
            }
            
            // Declare our JButton action for leaving a group
            Action leave = new AbstractAction()
            {
                public void actionPerformed(ActionEvent e)
                {

                    try {
                        
                        JTable table = (JTable)e.getSource();
                        int modelRow = Integer.valueOf( e.getActionCommand() );
                    
                        // This is the ID of the group
                        int id = Integer.parseInt(table.getModel().getValueAt(modelRow, 0).toString());
           
                        // Call our server and ask to be removed from the group
                        JSONObject response = HTTPService.leaveGroup(id);
                            
                        // Determines success and lets us know about it with a popup
                        if("error".equals(response.getString("status")))
                        {
                            JFrame PopUp = new JFrame();
                            JOptionPane.showMessageDialog(PopUp,"Error leaving group. Try again!");               
                        }
                        else
                        {
                            ((DefaultTableModel)table.getModel()).removeRow(modelRow);
                            JFrame PopUp = new JFrame();
                            JOptionPane.showMessageDialog(PopUp,"You left the group!");

                        }
                    } catch (IOException ex) {
                        Logger.getLogger(jpCreateTask.class.getName()).log(Level.SEVERE, null, ex);
                    }
                          
                }


            };

            // This binds our JButton render with column 5
            ButtonColumn buttonColumn = new ButtonColumn(jtGroups, leave, 3);
            buttonColumn.setMnemonic(KeyEvent.VK_D);


        } catch (IOException ex) {
            
            // Fatal error; The program could not render/compile
            Logger.getLogger(jpOverview.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtGroups = new javax.swing.JTable();
        btnGoBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        label5 = new java.awt.Label();

        setBackground(new java.awt.Color(0, 153, 153));

        jtGroups.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtGroups);

        btnGoBack.setBackground(new java.awt.Color(51, 51, 51));
        btnGoBack.setForeground(new java.awt.Color(204, 204, 204));
        btnGoBack.setText("Go Back");
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 153, 153));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Manage Groups");

        label5.setFont(new java.awt.Font("Modern No. 20", 0, 36)); // NOI18N
        label5.setText("Quick Track");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnGoBack)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(184, 184, 184))
            .addGroup(layout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnGoBack)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        // Switch the panel to jpGroups
        Container parent = this.getParent(); 
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cardLayout = (CardLayout)layout;
            cardLayout.show(parent, "jpGroups");
        }
    }//GEN-LAST:event_btnGoBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGoBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable jtGroups;
    private java.awt.Label label5;
    // End of variables declaration//GEN-END:variables
}
